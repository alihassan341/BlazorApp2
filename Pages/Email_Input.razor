
    <div class="w-100 px-3 pb-1">
    @foreach (var field in fields)
    {
        <div class="@divClass" @onclick="onAction" draggable="true" @ondragstart="@(e => JSRuntime?.InvokeVoidAsync("handleDragStart", e))">
            <label for="@field.Id">@field.Name :</label>
            <input type="text" class="form-control" id="@field.Id" @bind="field.Value" />
        @if (showActions)
        {
            <div class="d-flex align-items-ceneter justify-content-end pt-2">
                <button type="button" class="btn btn-outline-light btn-sm">
                    <i class="fa-solid fa-grip"></i>
                </button>
                <button type="button" class="btn btn-outline-info btn-sm mx-3" @onclick="DuplicateField">
                    <i class="fa-solid fa-copy"></i>
                </button>
                <button type="button" class="btn btn-outline-danger btn-sm">
                    <i class="fa-solid fa-square-minus"></i>
                </button>
            </div>            
        }
        </div>
    }
    </div>

    <style>
        .selected{
            border: 2px solid lightblue !important;
            border-style: dashed !important;
        }
    </style>

@code {
    private string divClass = "p-2 form-group mb-2";

    private bool showActions = false;

    private int nextId = 1;

    private void onAction()
    {
        if (!divClass.Contains("selected"))
        {
            divClass = "selected p-2 form-group mb-2";
            showActions = true;
        }
        // else
        // {
        //     divClass = "p-2";
        //     showActions = false;
        // }
    }

    [Inject]
    public IJSRuntime? JSRuntime { get; set; }

    private void EnableDragDrop()
    {
        JSRuntime?.InvokeVoidAsync("handleDrop", new object[] { });
    }

    private List<FieldModel> fields = new List<FieldModel>
    {
        new FieldModel { Id = 1, Name = "Email", Value = "moin@gmail.com" },
    };

    private void DuplicateField()
    {
        fields.Add(new FieldModel { Id = nextId++, Name = "Email", Value = "moin@gmail.com" });
    }

    public class FieldModel
    {
        public int Id { get; set; }
        public string Name { get; set; } = "";
        public string Value { get; set; } = "";
    }
}
