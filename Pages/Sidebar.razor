@page "/Sidebar"

<div>
     <div class="accordion w-100" id="defaultAccordion">
            <div class="accordion-item">
                <h2 class="accordion-header">
                    <span class="accordion-button m-0 f-s-13" data-bs-toggle="collapse"
                          data-bs-target="#defaultField" aria-expanded="true" aria-controls="collapseOne">
                        Default Fields
                    </span>
                </h2>
                <div class="accordion-collapse collapse show text-center pt-2 pb-2" id="defaultField"
                     data-bs-parent="#defaultAccordion">
                    @foreach (var obj in defautBtn)
                    {
                     <button class="btn btn-outline-secondary btn-sm m-1" @onclick="(() => CreateElement(obj.Name))">
                        
                             <i class="@obj.Icon"></i>
                            @obj.Name
                        </button>  
                    }
                </div>
            </div>
        </div>

    <div class="accordion w-100" id="basicAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <span class="accordion-button m-0 f-s-13" data-bs-toggle="collapse"
                   data-bs-target="#basicField" aria-expanded="true" aria-controls="collapseOne">
                    Basic Fields
                </span>
            </h2>
            <div class="accordion-collapse collapse show text-center pt-2 pb-2" id="basicField"
                 data-bs-parent="#basicAccordion">
                @foreach (var obj in basicBtns)
                {
                    <button class="btn btn-outline-secondary btn-sm m-1">
                        <i class="@obj.Icon"></i>
                        @obj.Name
                    </button>
                }
            </div>
        </div>
    </div>

    <div class="accordion" id="containerAccordion">
        <div class="accordion-item">
            <h2 class="accordion-header">
                <span class="accordion-button m-0 f-s-13" data-bs-toggle="collapse"
                   data-bs-target="#containerFields" aria-expanded="true" aria-controls="collapseOne">
                    Container
                </span>
            </h2>
            <div class="accordion-collapse collapse show text-center pt-2 pb-2" id="containerFields"
                 data-bs-parent="#containerAccordion">
                @foreach (var obj in containerBtns)
                {
                    <button class="btn btn-outline-secondary btn-sm m-1">
                        <i class="@obj.Icon"></i>
                        @obj.Name
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .f-s-13{
        font-size: 13px !important;
    }
</style>

@code {

    List<buttonCls> containerBtns = new List<buttonCls>
    {
        new buttonCls { Icon = "fa fa-envelope-o", Name = "Grid" },
        new buttonCls { Icon = "fa fa-phone-square", Name = "Table" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Tabs" },
        new buttonCls { Icon = "fa fa-location-arrow", Name = "Divider" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Sub-form" },
    };

    List<buttonCls> basicBtns = new List<buttonCls>
    {
        new buttonCls { Icon = "fa fa-envelope-o", Name = "Input" },
        new buttonCls { Icon = "fa fa-phone-square", Name = "TextArea" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Number" },
        new buttonCls { Icon = "fa fa-location-arrow", Name = "Radio" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Checkbox" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Select" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Time" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Date" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Rate" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Switch" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Slider" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Html" },
        new buttonCls { Icon = "fa fa-pencil", Name = "Cascader" },
        new buttonCls { Icon = "fa fa-pencil", Name = "File" },
    };

    private List<buttonCls> defautBtn = new List<buttonCls>
    {
        new buttonCls { Icon = "fa fa-envelope-o", Name = "Email" },
        new buttonCls { Icon = "fa fa-phone-square", Name = "Cellphone" },
        new buttonCls { Icon = "fa fa-pencil", Name = "URL" },
        new buttonCls { Icon = "fa fa-location-arrow", Name = "Region" },
        new buttonCls { Icon = "fa fa-drivers-license-o", Name = "Id Number" }
    };

    [Parameter]
    public EventCallback<string> ElementEvent { get; set; }

    private async void CreateElement(string? elementName)
    {
        if (elementName != null) {
            await ElementEvent.InvokeAsync(elementName);
        }
    }
    private class buttonCls
    {
        public string? Icon { get; set; }
        public string? Name { get; set; }
    };

}